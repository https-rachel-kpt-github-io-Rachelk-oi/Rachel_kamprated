apply plugin: 'java'

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
version = VERSION_NAME

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

targetCompatibility = '1.6'
sourceCompatibility = '1.6'

def siteUrl = 'https://github.com/ThirtyDegreesRay/DataAutoAccess'   // 项目的主页
def gitUrl = 'https://github.com/ThirtyDegreesRay/DataAutoAccess.git'   // Git仓库的url
group = "com.thirtydegreesray"            // Maven Group ID for the artifact，
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name 'Android bundle data auto access'     //项目的描述 你可以多写一点
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'ThirtyDegreesRay'        //填写的一些基本信息
                        name 'ThirtyDegreesRay'
                        email '550906320@qq.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier = 'sources'
}
//task javadocb(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
Properties properties = new Properties()
//读取properties的配置信息，当然直接把信息写到代码里也是可以的
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"          //这个应该是传到maven的仓库的
        name = "data-auto-access"    //发布的项目名字
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}
